@page "{hdrId:int?}"
@model InvWeb.Pages.Stores.Receiving.ItemDetails.CreateModel

@{
    ViewData["Title"] = "Transaction Create";
}

<h1>Create</h1>

<h4>Transaction Items @Model.ItemDtlsCreateModel.InvTrxDtl.InvItemId </h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form method="post">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group" hidden>
                <label asp-for="ItemDtlsCreateModel.InvTrxDtl.InvTrxHdrId" class="control-label"></label>
                <select asp-for="ItemDtlsCreateModel.InvTrxDtl.InvTrxHdrId" class="form-control" asp-items="Model.ItemDtlsCreateModel.InvTrxHdrs"></select>
            </div>
            <div class="form-group">
                <label class="control-label">   </label>
                <a asp-page="./SearchItem" id="SearchItem-link" asp-route-id="@Model.ItemDtlsCreateModel.HrdId" asp-route-itemId="@Model.ItemDtlsCreateModel.InvTrxDtl.InvItemId" asp-route-actionType="Create" class="btn btn-primary" style="width:80%;">   Update brand/origin <img src="/img/icons/icons-search.png" width="15" height="15" alt="search" /> </a>
            </div>
            <div class="form-group">
                <label class="control-label"> Item </label>
                <select asp-for="ItemDtlsCreateModel.InvTrxDtl.InvItemId" class="form-control" asp-items="Model.ItemDtlsCreateModel.InvItems" id='itemDropdown'></select>
            </div>
            <div class="form-group">
                <label class="control-label"> HeatNo </label>
                <input asp-for="ItemDtlsCreateModel.InvTrxDtl.BatchNo" class="form-control" maxlength="20" id="heatno" />
                <span asp-validation-for="ItemDtlsCreateModel.InvTrxDtl.BatchNo" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label class="control-label"> Qty </label>
                <input asp-for="ItemDtlsCreateModel.InvTrxDtl.ItemQty" class="form-control" value="1" />
                <span asp-validation-for="ItemDtlsCreateModel.InvTrxDtl.ItemQty" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label class="control-label"> Uom </label>
                <select asp-for="ItemDtlsCreateModel.InvTrxDtl.InvUomId" class="form-control" asp-items="Model.ItemDtlsCreateModel.InvUoms" id="UomDropdown"></select>
            </div>
            <div class="form-group" hidden>
                <label asp-for="ItemDtlsCreateModel.InvTrxDtl.InvTrxDtlOperatorId" class="control-label"></label>
                <select asp-for="ItemDtlsCreateModel.InvTrxDtl.InvTrxDtlOperatorId" class="form-control" asp-items="Model.ItemDtlsCreateModel.InvTrxDtlOperators"></select>
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

@await Component.InvokeAsync("Dialog",
                     new { items =  ViewData["DialogItems"] , selector = "itemDropdown"  })

<div>
    <a asp-page="../Details" asp-route-id="@Model.ItemDtlsCreateModel.HrdId">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

    <script src="~/js/Store/ItemUomDropdown.js"></script>

    <script>

        $(document).ready(function () {
            var defaultItem = $("#itemDropdown option:first").val();
            GetItemOumsWithId(defaultItem);

            var itemid = $('#itemDropdown').val();
            var hdrId = @Model.ItemDtlsCreateModel.HrdId;
            UpdateLink(hdrId, itemid);

            SearchItem();
        });

        function SearchItem() {

            if (@ViewBag.SelectedItemId != 0) {

                $('#itemDropdown').val(@ViewBag.SelectedItemId).change();
                GetItemOumsWithId(@ViewBag.SelectedItemId);
            }
        }

        $("#itemDropdown").on('change',()=>{

            var itemid = $('#itemDropdown').val();
            var hdrId = @Model.ItemDtlsCreateModel.HrdId;

            UpdateLink(hdrId, itemid);

        });

        function UpdateLink(hrId, itemId){
            $("#SearchItem-link").attr("href", "/Stores/Receiving/ItemDetails/SearchItem/" + hrId +"?itemId="+ itemId +"&actionType=Create")
        }

        // --- Dialog Js --- //


        $("#itemDropdown").focus(function () {
            $("#itemDropdown > option").css("display", "none");

            ShowItemModal();
        });

        function ShowItemModal() {
            $("#itemSearchModal").modal("show");

        }


        function HideItemModal() {
            $("#itemSearchModal").modal("hide");

        }
        
        function SelectItemFromDialog(selector, id) {
            //update selected in dropdown
            $("#" + selector).val(id).change();
            HideItemModal();

        }


        function SearchCompany() {
            var input, filter, ul, li, a, i;
            input = $("#SearchBar").val();
            filter = input;
            ul = document.getElementById("SearchList");
            tr = ul.getElementsByTagName("tr");


            console.log(" JQUERY ");

            $("#SearchList tr").each(function () {
                var itemText = $(this).find("td").eq(1).text();

                //console.log(itemText);
                console.log(itemText + " contains in " + filter + " : " + itemText.toLowerCase().indexOf(filter));
                if (itemText != undefined) {
                    if (itemText.toLowerCase().indexOf(filter) >= 0) {
                        console.log(itemText + " contains in " + filter);
                        $(this).show();
                    }else{
                        $(this).hide();
                    }

                }
               
            });

        }

    </script>
}
