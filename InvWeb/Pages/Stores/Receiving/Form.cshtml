@page
@model InvWeb.Pages.Stores.Receiving.FormModel
@{
    string trxStatus = Model.ReceivingDetailsModel.InvTrxHdr.InvTrxHdrStatu.Status.ToUpper();
}
<style>
    .td-bordered {
       border:1px solid lightgray;
    }

    .control-label{
        width: 5rem !important;
        margin-left: 1rem;
    }
</style>

<div style="height:100px;">
    <h2> Transaction Status : @trxStatus </h2>
    <div class="row">
        <div class="col-3">
           1. Encoding Request
        </div>
        <div class="col-3">
           2. Approved
        </div>
        <div class="col-3">
           3. Receive Items
        </div>
        <div class="col-3">
           4. Closed
        </div>
    </div>
    <div class="progress" style="width:95%;">
        <div class="progress-bar" role="progressbar" style="width: 30%" aria-valuenow="30" aria-valuemin="0" aria-valuemax="100"></div>
    </div>
</div>

<div style="margin:5px;">

    <a asp-page="./Index" asp-route-storeId="@Model.ReceivingDetailsModel.InvTrxHdr.InvStoreId" asp-route-status="@trxStatus" class="btn btn-primary">  Back to Transaction List</a>
    @*<a asp-page="../Printables/RequestForm" asp-route-id="@Model.ReceivingDetailsModel.InvTrxHdr.Id" asp-route-type="@Model.ReceivingDetailsModel.InvTrxHdr.InvTrxTypeId" target="_blank" class="btn btn-primary">Print Voucher</a>*@

</div>
<div class="card" style="width:95%;">

<div style="display: flex;flex-direction: column;align-content: center;">
    <div style=" display:flex;justify-content:center;margin-top:30px;">
        <h2> Company - Warehouse - Mecuayan </h2>
    </div>
    <div style=" display:flex;justify-content:center;margin-bottom:40px;">
         <h3> Receiving Form </h3>
    </div>
        <table class="table">
            <tr>
                <td>
                    <b>  Status : @Model.ReceivingDetailsModel.InvTrxHdr.InvTrxHdrStatu.Status </b>
                </td>
                <td>
                    
                     Requested by:
                     @Model.ReceivingDetailsModel.InvTrxHdr.UserId 
                   
                </td>
            </tr>
            <tr>
                <td>
                    <div class="form-group row">
                        <label class="col-sm-2 col-form-label"> Party: </label>
                        
                        <input id="textinput-Party" type="text"  class="form-control" style="width:40rem;" />
                    </div>
                </td>
                <td>
                    <div class="form-group row" >
                        <label class="col-sm-3 col-form-label">   RefNo: </label>
                        <input id="textinput-RefNo" type="text" class="form-control" style="width:10rem;" value="@Model.ReceivingDetailsModel.InvTrxHdr.Id" readonly/>
                    </div>
                  
                </td>
            </tr>
            <tr>
                <td>
                    <div class="form-group row">
                        <label class="col-sm-2 col-form-label"> Remarks </label>
                        <input id="textinput-HdrRemarks" type="text" class="form-control" style="width:40rem;" value="@Model.ReceivingDetailsModel.InvTrxHdr.Remarks" />
                    </div>
                </td>
                <td>
                    <div class="form-group row">
                        <label class="col-sm-3 col-form-label">  Date: </label>
                        
                        <input id="textinput-Date" type="date" class="form-control" style="width:10rem;" val="Viewbag.DateToday" />
                    </div>
                </td>
            </tr>
        </table>
</div>

    <div style="margin:15px;">

        <table class="table" style="border:1px solid lightgray;" id="ItemsTable">
        <tr>
            <th>
                PARTICULARS
            </th>
                <th class="td-bordered">
                QTY
            </th>
            <th class="td-bordered">
                UOM
            </th>
             <th class="td-bordered">
                REMARKS
            </th>
            <th>

            </th>
        </tr>

        <!-- ITEMS -->
        @foreach (var item in Model.ReceivingDetailsModel.InvTrxDtls)
        {
        <tr id="itemDetails-@item.Id" cite="">
            <td style="min-width:40rem;" id="itemDescEdit-@item.Id">
                ( @item.InvItem.Code )
                @item.InvItem.Description
            </td>
            <td  style="min-width:2rem;">
                @item.ItemQty
            </td>
            <td  style="min-width:8rem;">
                @item.InvUom.uom
            </td>
            <td>
                @item.InvItem.Remarks
            </td>
                    <td>
                        @if (trxStatus == "APPROVED")
                        {
                            <div style="width:7rem;">
                                <button class="btn btn-outline-primary btn-sm" onclick="ReceiveItemRow(this, @item.Id)"> Receive Item </button>
                            </div>
                        }
                        <div class="trx-items-actions" style="min-width:5rem;display:flex;" >
                            <button class="btn btn-outline-primary btn-sm" onclick="EditExisitingItemRow(this, @item.Id)"> Edit </button>
                            <button class="btn btn-outline-danger btn-sm" onclick="RemoveItemFromTable(this, @item.Id)"> X </button>
                        </div>
                    </td>
            </tr>
        }


            <tr id="AddItemsField">
                <td>
                   Add New Item
                    <div style="display:flex;">
                        <select id="itemDropdown" class="form-control" asp-items="ViewBag.InvItems"></select>
                        <img id="ItemTextfieldBtn" src="~/img/icons/icons-search.png" width="37" alt="search" class="item-search-icon">
                    </div>
                </td>
                <td>
                    Qty 
                    <input id="textinput-Qty" type="text"  class="form-control" value="1" />
                </td>
                <td>
                    Uom
                    <select id="UomDropdown" class="form-control" asp-items="ViewBag.UomsList"></select>
                </td>
                <td>
                   @* Remarks
                    <input id="textinput-Remarks" type="text"  class="form-control" />*@
                </td>
                <td>
                    
                    <div class="row" style="width:5rem;">
                        <button class="btn btn-outline-primary btn-sm" onclick="AddNewItemOnTableRow()"> Add </button>
                    </div>
                </td>
        </tr>
        
        <tr>
            <td colspan="5">
                TOTAL 
            </td>
        </tr>

        </table>
    </div>
</div>
<div class="col-lg-6" style="margin-top:10px;">

    @if (trxStatus == "REQUEST")
    {
        <a asp-page="./Index" class="btn btn-primary" asp-route-storeId="@Model.ReceivingDetailsModel.StoreId" asp-route-Status="PENDING">Request for Approval</a>

    }
    
</div>

@await Component.InvokeAsync("Dialog", new { items =  ViewData["DialogItems"] , selector = "itemDropdown"  })
@await Component.InvokeAsync("SearchItemEdit", new { items =  ViewData["DialogItems"] , selector = "itemEditDropdown"  })

@{
    Html.RenderPartial("ModalAddItem");
}

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script src="~/js/Pages/Stores/Shared/ItemDetails/ItemUomDropdown.js"></script>
    <script src="~/js/Shared/Components/Dialog/DialogItem.js"></script>
    <script src="~/js/Pages/Stores/Receiving/ItemDetails/Create.js"></script>

    <script>

        $(document).ready(function () {

            $("#itemDropdown").val($("#itemDropdown option:first").val());
            //SearchItem(@ViewBag.SelectedItemId); 
            
            var defaultItem = $("#itemDropdown option:first").val();
            GetItemOumsWithId(defaultItem);

            if ("@Model.ReceivingDetailsModel.InvTrxHdr.InvTrxHdrStatu.Status" == "APPROVED") {
                $("#AddItemsField").hide();
                $(".trx-items-actions").hide();
            }
        });


        $("#itemDropdown").on('change', () => {

            var itemid = $('#itemDropdown').val();
            var itemDesc = $('#itemDropdown option:selected').text();

            GetItemOumsWithId(itemid);

            UpdateItemInputText(itemDesc);

        });

        function AddNewItemOnTableRow(){

            var invHdrId = $('#textinput-RefNo').val();
            var itemDesc = $('#itemDropdown option:selected').text();
            var itemId = $('#itemDropdown').val();
            var itemQty = $('#textinput-Qty').val();
            var itemUom = $('#UomDropdown option:selected').text();
            var itemUomId = $('#UomDropdown').val();
            var itemRemarks = "";

            $('#ItemsTable tr:last').prev().before('<tr> <td> ' + itemDesc + '</td> <td> ' + itemQty + ' </td> <td> ' + itemUom + ' </td> <td> ' + itemRemarks + ' </td> <td>  </td> </tr>');

            Post_addInvItem(invHdrId, itemId, itemQty, itemUomId);
        
        }

        function Post_addInvItem(invHdrId, itemId, itemQty, itemUomId) {

            var data = {
                hdrId: invHdrId,
                invId: itemId,
                qty: itemQty,
                uomId: itemUomId
            };
            const myData = JSON.stringify(data);
            console.log(data)

            var uriString = '?hdrId=' + invHdrId + '&invId=' + itemId + '&qty=' + itemQty + '&uomId=' + itemUomId;

            $.ajax({
                type: 'POST',
                url: '/api/ApiInvTrxDtls/AddTrxDtlItem' + uriString,
                data: myData,
                error: function (e) {
                    console.log(e);
                    //alert("Unable to Add Item.")
                },
                success: function (res){
                    console.log("success");
                    console.log(res);
                },
                dataType: "json",
                contentType: "application/json"
            });
        }

        function RemoveItemFromTable(e, invDtlsId){
            
            //remove table row
            $(e).parent().parent().parent().remove();

            //remove from table db
            $.ajax({
                type: 'DELETE',
                url: '/api/ApiInvTrxDtls/DeleteTrxDtlItem?id=' + invDtlsId,
                data: { id: invDtlsId },
                error: function (e) {
                    console.log(e);
                    //alert("Unable to Add Item.")
                },
                success: function (res) {
                    console.log("success");
                    console.log(res);
                },
                dataType: "json",
                contentType: "application/json"
            });
        }

        function EditExisitingItemRow(e, id){
         
            $("#ItemEditModal").modal('show');
            $("#itemEditSearchModal").css("z-index", 2050);

            RetrieveItemDetails(id);
        }

        function GetItemDetails(id){
            return $.ajax({
                type: 'GET',
                url: '/api/ApiInvTrxDtls/GetItemDetails?id=' + id,
                data: { id: id },
                error: function (e) {
                    console.log(e);
                    //alert("Unable to Add Item.")
                },
                success: function (res) {
                    console.log("success");
                    console.log(res);
                },
                dataType: "json",
                contentType: "application/json"
            });
        }

        async function RetrieveItemDetails(id){
            const result = await GetItemDetails(id);
            console.log(result);

            //populate fields
            $("#trxDtlsId").val(id);
            $("#itemEditDropdown").val(result["InvItemId"]);
            $("#itemEditQty").val(result["ItemQty"]);
            $("#UomEditDropdown").val(result["InvUomId"]);
        }

        function EditItemDetailsSaveChanges(){
            var trxDtlsId = $("#trxDtlsId").val();
            var itemId = $("#itemEditDropdown").val();
            var itemQty = $("#itemEditQty").val();
            var itemUomId = $("#UomEditDropdown").val();


            var data = {
                invDtlsId: trxDtlsId,
                invId: itemId,
                qty: itemQty,
                uomId: itemUomId
            };
            const myData = JSON.stringify(data);
            console.log(data);

            var uriString = '?invDtlsId=' + trxDtlsId + '&invId=' + itemId + '&qty=' + itemQty + '&uomId=' + itemUomId;

            $.ajax({
                type: 'POST',
                url: '/api/ApiInvTrxDtls/EditTrxDtlItem' + uriString,
                data: myData,
                error: function (e) {
                    console.log(e);
                    //alert("Unable to Add Item.")
                },
                success: function (res) {
                    console.log("success");
                    console.log(res);
                },
                dataType: "json",
                contentType: "application/json"
            });


            $("#ItemEditModal").modal('hide');

            $("#itemDetails-" + trxDtlsId).hide();

            //update item row
            $("#itemDetails-" + trxDtlsId).after('<tr id="#itemDetails-' + trxDtlsId + '">' +
                '<td>' + $("#itemEditDropdown option:selected()").text() + ' </td>' +
                '<td>' + $("#itemEditQty").val() + ' </td>' +
                '<td>' + $("#UomEditDropdown option:selected()").text() + ' </td>' +
                '<td> </td>' +
                '<td> <div class="row" style="width:5rem;">' +
                '<button class="btn btn-outline-primary btn-sm" onclick = "EditExisitingItemRow(this, ' + trxDtlsId + ')" > Edit </button>' +
                '<button class="btn btn-outline-danger btn-sm" onclick = "RemoveItemFromTable(this, ' + trxDtlsId + ')" > X </button>'+
                '     </div> </td > ' +
            '</tr>')

            if ($("#itemDetails-" + trxDtlsId).css('display') == 'none') {
                // true
                $("#itemDetails-" + trxDtlsId).first().remove();
            }
        }

        $("#textinput-HdrRemarks").blur(function(){

            UpdateHeaderRemarks();

            $(this).css("border-color", "green");

            setTimeout(
                function () {
                    $(this).css("border-color", "black");
                }, 2000);
        });

        function UpdateHeaderRemarks(){

            var data = {
                hdrId: $("#textinput-RefNo").val(),
                remarks: $("#textinput-HdrRemarks").val()
            }

            const myData = JSON.stringify(data);
            console.log(myData);

            var uriString = '?hdrId=' + $("#textinput-RefNo").val() + '&remarks=' + $("#textinput-HdrRemarks").val();

            $.ajax({
                type: 'POST',
                url: '/api/ApiInvTrxDtls/EditHdrRemarks' + uriString,
                data: myData,
                error: function (e) {
                    console.log(e);
                    //alert("Unable to Add Item.")
                },
                success: function (res) {
                    console.log("success");
                    console.log(res);
                },
                dataType: "json",
                contentType: "application/json"
            });

        }

    </script>
}