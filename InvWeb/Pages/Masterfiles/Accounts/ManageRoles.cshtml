@page
@model InvWeb.Pages.Masterfiles.Accounts.ManageRolesModel

@{

    var Roles = ViewData["Roles"] as IEnumerable<Microsoft.AspNetCore.Identity.IdentityRole>;
    var User = ViewData["User"] as string;
}

<h2> Manage Roles </h2>
<p>
    <a asp-page="./Main"> Back to List </a>
</p>
<!-- Button trigger modal -->
<button type="button" class="btn btn-primary" data-toggle="modal" data-target="#addRoleModal">
    + Add Role
</button>
<table class="table">
    <tr>
        <th>
            Role
        </th>
        <th></th>
    </tr>
    @foreach (var item in Model.AppUserRoles)
    {
        <tr>
            <td>
                @item.RoleName
            </td>
            <td>
                <button class="btn btn-danger" onclick="RemoveUserRole('@User', @item.RoleId)"> Remove </button>
            </td>
        </tr>
    }
</table>

<!-- Add Roles Modal -->
<div class="modal fade" id="addRoleModal" tabindex="-1" aria-labelledby="addModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Modal title</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <!-- List of roles not assigned to the user -->
                <div class="list-group">

                    @foreach (var roles in Roles)
                    {
                        <button onclick="AddUserRole('@User', @roles.Id)" class="list-group-item"> @roles.Name  </button>
                    }
                </div>

            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>


<!-- Remove Roles Modal -->

@section Scripts{
    <script>

        function AddUserRole(user, role) {
           $.post('/api/ApiAccounts/PostAddUserRole?roleId=' + role + '&userId=' + user,
                null).done((result) => {
                    window.location.reload(false);

                    //console.log(result);

                }).fail(function (xhr, status, error) {
                    // error handling
                    alert("Unable to add role to this user. ");
                });
        }


        function RemoveUserRole(user, role) {
            $.ajax({
                url: '/api/ApiAccounts/RemoveUserRole?roleId=' + role + '&userId=' + user, 
                type: "DELETE", 
                data: null, 
                async: false,
                success: function (response, textStatus, jqXHR) {
                    //console.log(response);
                    window.location.reload(false);
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    //console.log(jqXHR);
                    alert("Unable to renive role to this user. ");
                }
            });
        }

    </script>
}